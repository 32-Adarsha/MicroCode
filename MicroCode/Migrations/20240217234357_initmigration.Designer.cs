// <auto-generated />
using System;
using MicroCode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MicroCode.Migrations
{
    [DbContext(typeof(MicroCodeContext))]
    [Migration("20240217234357_initmigration")]
    partial class initmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MicroCode.models.CodeModel", b =>
                {
                    b.Property<Guid>("Program_id")
                        .HasColumnType("uuid");

                    b.Property<string>("input")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mainCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("output")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("template")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("verified")
                        .HasColumnType("boolean");

                    b.HasKey("Program_id");

                    b.ToTable("CodeModels");
                });

            modelBuilder.Entity("MicroCode.models.ProgramModel", b =>
                {
                    b.Property<Guid>("Program_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("discription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("flagged")
                        .HasColumnType("boolean");

                    b.Property<bool>("isPrivate")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("registration_data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("user_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("verified")
                        .HasColumnType("boolean");

                    b.HasKey("Program_id");

                    b.HasIndex("user_id");

                    b.ToTable("ProgramModel");
                });

            modelBuilder.Entity("MicroCode.models.UserModel", b =>
                {
                    b.Property<Guid>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("eamil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone_no")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("registration_data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("user_id");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("MicroCode.models.CodeModel", b =>
                {
                    b.HasOne("MicroCode.models.ProgramModel", "ProgramModel")
                        .WithOne("CodeModel")
                        .HasForeignKey("MicroCode.models.CodeModel", "Program_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramModel");
                });

            modelBuilder.Entity("MicroCode.models.ProgramModel", b =>
                {
                    b.HasOne("MicroCode.models.UserModel", "UserModel")
                        .WithMany("ProgramModels")
                        .HasForeignKey("user_id");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("MicroCode.models.ProgramModel", b =>
                {
                    b.Navigation("CodeModel")
                        .IsRequired();
                });

            modelBuilder.Entity("MicroCode.models.UserModel", b =>
                {
                    b.Navigation("ProgramModels");
                });
#pragma warning restore 612, 618
        }
    }
}
